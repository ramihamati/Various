version: "3.7"
services:
  es01:
    ports:
      - 9200:9200
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.2
    volumes:
      - ${AppRealLocation}/data/es:/usr/share/elasticsearch/data
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: ["CMD", "curl","-s" ,"-f", "http://localhost:9200/_cat/health"]

  kibana:
    image: docker.elastic.co/kibana/kibana:8.6.2
    volumes:
      - ${AppRealLocation}/data/kibana:/usr/share/kibana/data
    ports:
      - 5601:5601
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=http://es01:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:5601/"]
      retries: 6

  apm-server:
    image: docker.elastic.co/apm/apm-server:7.9.1
    depends_on:
      kibana: {condition: service_healthy}
      es01: 
        condition: service_healthy
    cap_add: ["CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID"]
    cap_drop: ["ALL"]
    ports:
    - 8200:8200
    command: >
       apm-server -e
         -E apm-server.rum.enabled=true
         -E setup.kibana.host=kibana:5601
         -E setup.template.settings.index.number_of_replicas=0
         -E apm-server.kibana.enabled=true
         -E apm-server.kibana.host=kibana:5601
         -E output.elasticsearch.hosts=["es01:9200"]
    healthcheck:
      interval: 10s
      retries: 12
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8200/

  heartbeat:
    container_name: heartbeat
    hostname: heartbeat
    # user: root #To read the docker socket
    image: "docker.elastic.co/beats/heartbeat:8.6.2"
    volumes:
      #Mount the Heartbeat configuration so users can make edits.
      - ${AppRealLocation}/data/beats/heartbeat/heartbeat.yml:/usr/share/heartbeat/heartbeat.yml
    depends_on:
      es01: { condition: service_healthy }
    command: heartbeat -e -strict.perms=false
    restart: on-failure